/*!
 * mi18n - https://github.com/Draggable/mi18n
 * Version: 0.3.3
 * Author: Kevin Chappell <kevin.b.chappell@gmail.com> (http://kevin-chappell.com)
 */
module.a=function(e){function c(a){if(d[a])return d[a].a;var b=d[a]={f:a,g:!1,a:{}};return e[a].call(b.a,b,b.a,c),b.g=!0,b.a}var d={};return c.m=e,c.i=d,c.f=function(a){return a},c.b=function(a,b,d){c.c(a,b)||Object.defineProperty(a,b,{configurable:!1,enumerable:!0,get:d})},c.j=function(a){var b=a&&a.h?function(){return a.default}:function(){return a};return c.b(b,"a",b),b},c.c=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},c.l="dist/",c(c.o=0)}([function(){eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Main mi18n class.\n */\nvar I18N = function () {\n  /**\n   * Process options and start the module\n   * @param {Object} options\n   */\n  function I18N() {\n    _classCallCheck(this, I18N);\n\n    var defaultConfig = {\n      extension: '.lang',\n      // local or remote directory containing language files\n      location: 'assets/lang/',\n      // list of available locales, handy for populating selector.\n      langs: ['en-US'],\n      locale: 'en-US', // init with user's preferred language\n      preloaded: {}\n    };\n    var _this = this;\n\n    /**\n     * Load language and set default\n     * @param  {Object} options\n     * @return {Promise}        resolves language\n     */\n    _this.init = function (options) {\n      _this.config = Object.assign({}, defaultConfig, options);\n\n      _this.langs = Object.assign({}, _this.config.preloaded);\n      _this.locale = _this.config.locale || _this.config.langs[0];\n\n      return _this.setCurrent(_this.locale);\n    };\n  }\n\n  /**\n   * get a string from a loaded language file\n   * @param  {String} key  - the key for the string we are trying to retrieve\n   * @return {String}      - correct language string\n   */\n\n\n  _createClass(I18N, [{\n    key: 'getValue',\n    value: function getValue(key) {\n      return this.current && this.current[key] || key;\n    }\n\n    /**\n     * Escape variable syntax\n     * @param  {String} str\n     * @return {String}     escaped str\n     */\n\n  }, {\n    key: 'makeSafe',\n    value: function makeSafe(str) {\n      var mapObj = {\n        '{': '\\\\{',\n        '}': '\\\\}',\n        '|': '\\\\|'\n      };\n\n      str = str.replace(/\\{|\\}|\\|/g, function (matched) {\n        return mapObj[matched];\n      });\n\n      return new RegExp(str, 'g');\n    }\n\n    /**\n    * Temporarily put a string into the currently loaded language\n    * @param  {String} key\n    * @param  {String} string\n    * @return {String} string in current language\n    */\n\n  }, {\n    key: 'put',\n    value: function put(key, string) {\n      return this.current[key] = string;\n    }\n\n    /**\n     * Parse arguments for the requested string\n     * @param  {String} key  the key we use to lookup our translation\n     * @param  {multi}  args  string, number or object containing our arguments\n     * @return {String}      updated string translation\n     */\n\n  }, {\n    key: 'get',\n    value: function get(key, args) {\n      var _this = this;\n      var value = this.getValue(key);\n      var tokens = value.match(/\\{[^\\}]+?\\}/g);\n      var token = void 0;\n\n      if (args && tokens) {\n        if ('object' === (typeof args === 'undefined' ? 'undefined' : _typeof(args))) {\n          for (var i = 0; i < tokens.length; i++) {\n            token = tokens[i].substring(1, tokens[i].length - 1);\n            value = value.replace(_this.makeSafe(tokens[i]), args[token] || '');\n          }\n        } else {\n          value = value.replace(/\\{[^\\}]+?\\}/g, args);\n        }\n      }\n\n      return value;\n    }\n\n    /**\n     * Turn raw text from the language files into fancy JSON\n     * @param  {String} rawText\n     * @return {Object} converted language file\n     */\n\n  }, {\n    key: 'fromFile',\n    value: function fromFile(rawText) {\n      var lines = rawText.split('\\n');\n      var lang = {};\n\n      for (var matches, i = 0; i < lines.length; i++) {\n        matches = lines[i].match(/^(.+?) *?= *?([^\\n]+)/);\n        if (matches) {\n          var value = matches[2].replace(/^\\s+|\\s+$/, '');\n          lang[matches[1]] = value;\n        }\n      }\n\n      return lang;\n    }\n\n    /**\n     * Remove double carriage returns\n     * @param  {Object} response\n     * @return {Object}          processed language\n     */\n\n  }, {\n    key: 'processFile',\n    value: function processFile(response) {\n      var rawText = response.replace(/\\n\\n/g, '\\n');\n      return this.fromFile(rawText);\n    }\n\n    /**\n     * Load a remotely stored language file\n     * @param  {String} locale\n     * @return {Promise}       resolves response\n     */\n\n  }, {\n    key: 'loadLang',\n    value: function loadLang(locale) {\n      var _this = this;\n      return new window.Promise(function (resolve, reject) {\n        if (_this.langs[locale]) {\n          resolve(_this.langs[locale]);\n        } else {\n          var xhr = new XMLHttpRequest();\n          var langFile = _this.config.location + locale + _this.config.extension;\n          xhr.open('GET', langFile, true);\n          xhr.onload = function () {\n            if (this.status <= 304) {\n              var processedFile = _this.processFile(xhr.responseText);\n              _this.langs[locale] = processedFile;\n              resolve(processedFile);\n            } else {\n              reject({\n                status: this.status,\n                statusText: xhr.statusText\n              });\n            }\n          };\n          xhr.onerror = function () {\n            reject({\n              status: this.status,\n              statusText: xhr.statusText\n            });\n          };\n          xhr.send();\n        }\n      });\n    }\n\n    /**\n     * return currently available languages\n     * @return {Object} all configured languages\n     */\n\n  }, {\n    key: 'setCurrent',\n\n\n    /**\n     * Attempt to set the current language to the local provided\n     * @param {String}   locale\n     * @return {Promise} language\n     */\n    value: function () {\n      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {\n        var locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'en-US';\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadLang(locale);\n\n              case 2:\n\n                this.locale = locale;\n                this.current = this.langs[locale];\n\n                return _context.abrupt('return', this.current);\n\n              case 5:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setCurrent() {\n        return _ref.apply(this, arguments);\n      }\n\n      return setCurrent;\n    }()\n  }, {\n    key: 'getLangs',\n    get: function get() {\n      return this.config.langs;\n    }\n  }]);\n\n  return I18N;\n}();\n\nexports.default = new I18N();//# sourceMappingURL=data:application/json;charset=utf-8;base64,")}]);
